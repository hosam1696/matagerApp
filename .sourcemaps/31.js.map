{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AAChB;AACyD;AAezF;IAAA;IAA0B,CAAC;IAAd,WAAW;QAZvB,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,qDAAK;aACN;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,qDAAK,CAAC;gBAC/B,0GAAwB;aACzB;YACD,OAAO,EAAE;gBACP,qDAAK;aACN;SACF,CAAC;OACW,WAAW,CAAG;IAAD,kBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClB8B;AACZ;AAC2D;AAEjC;AACpB;AAEI;AACpD,mEAAmE;AAC3B;AASxC;IAIE,eAAmB,OAAsB,EAChC,SAAoB,EACpB,SAAuB,EACvB,SAA0B,EAC1B,OAAgB;QACvB,oBAAoB;QACb,GAAQ,EACR,QAAkB,EAClB,MAAc,EACd,YAA0B;QAThB,YAAO,GAAP,OAAO,CAAe;QAChC,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAc;QACvB,cAAS,GAAT,SAAS,CAAiB;QAC1B,YAAO,GAAP,OAAO,CAAS;QAEhB,QAAG,GAAH,GAAG,CAAK;QACR,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAVnC,eAAU,GAAY,KAAK,CAAC;QAY1B,IAAI,CAAC,SAAS,GAAG,IAAI,iEAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,QAAQ,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;SACrD,CAAC,CAAC;IACL,CAAC;IAED,8BAAc,GAAd;QACE,mGAAmG;QAEnG;;;;;;;SAOC;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,+BAAe,GAAf;QAAA,iBAiBC;QAhBC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,eAAK;YAC5B,IAAI,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,GAAC,SAAS,GAAC,SAAS,CAAC,CAAC;YAC/F,KAAI,CAAC,UAAU,GAAG;gBACd,eAAe,EAAG,KAAK;gBACvB,IAAI,EAAG,IAAI;aACd;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,eAAK;YACvC,IAAI,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,GAAC,SAAS,GAAC,SAAS,CAAC,CAAC;YAC/F,KAAI,CAAC,UAAU,GAAG;gBACd,eAAe,EAAG,KAAK;gBACvB,IAAI,EAAG,IAAI;aACd;QACH,CAAC,CAAC;QACJ,uCAAuC;IACvC,CAAC;IAED,2BAAW,GAAX;QAAA,iBA+CC;QA9CC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YAEzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,SAAS,cAAK,IAAI,CAAC,UAAU,EAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;iBACrE,SAAS,CAAC,UAAC,EAAuB;oBAAtB,kBAAM,EAAE,oBAAO,EAAE,cAAI;gBAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;gBAC7B,oDAAoD;gBACpD,EAAE,CAAC,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC;oBAExB,IAAI,aAAa,GAAG,IAAI,CAAC;oBAEzB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBAExB,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;oBACrE,qFAAqF;oBAGrF,4FAA4F;oBAC5F,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAC,KAAK,CAAC,CAAC;oBAE7C,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;gBAGrB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,SAAS,CAAC,KAAG,OAAS,CAAC;gBAC9B,CAAC;YAEH,CAAC,EAAC,aAAG;gBACH,KAAI,CAAC,SAAS,CAAC,+BAA+B,CAAC,CAAC;gBAChD,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAClB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC,CACF,CAAC;QACJ,CAAC;QAAA,IAAI,CAAC,CAAC;YACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACjD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,GAAG,CAAC,CAAc,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ;gBAArB,IAAI,KAAK;gBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBACnD,KAAK,GAAG,CAAC,KAAK,IAAI,UAAU,CAAC,GAAG,cAAc,GAAG,aAAa,CAAC;oBAC/D,IAAI,CAAC,SAAS,CAAC,6DAAc,KAAO,CAAC,CAAC;oBACtC,KAAK,CAAC;gBACR,CAAC;aACF;QACH,CAAC;IACH,CAAC;IAED,8BAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC7B,CAAC;IAED,+BAAe,GAAf;QAAA,iBASC;QARC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,wCAAwC,CAAC,CAAC;YACzD,UAAU,CAAC;gBACT,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC,EAAE,EAAE,CAAC,CAAC;QACT,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAED,yBAAS,GAAT,UAAU,GAAG;QACX,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,OAAO,EAAE,GAAG;YACZ,QAAQ,EAAE,IAAI;SAEf,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,4BAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;IACjC,CAAC;IAED,wBAAQ,GAAR;QACE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;IAtIU,KAAK;QALjB,wEAAS,EAAE;QACX,gEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;6EAKyC;YACrB,qEAAS;YACT,sEAAY;YACZ,uEAAe;YACjB,+DAAO;YAEX,+DAAG;YACE,8DAAQ;YACV,qEAAM;YACA,EAAY;OAbxB,KAAK,CAwIjB;IAAD,CAAC;AAAA;SAxIY,KAAK,mB","file":"31.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { Login } from './login';\r\nimport { HsaloaderComponentModule } from '../../components/hsa-loader/hsa-loader.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Login,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(Login),\r\n    HsaloaderComponentModule\r\n  ],\r\n  exports: [\r\n    Login\r\n  ]\r\n})\r\nexport class LoginModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { PushProvider } from './../../providers/push';\r\nimport { Component } from '@angular/core';\r\nimport {Events, IonicPage, NavController, NavParams, Platform, ToastController} from 'ionic-angular';\r\n\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Network } from '@ionic-native/network';\r\n\r\nimport { UserProvider } from \"../../providers/user\";\r\n// import {Push, PushOptions,PushObject} from \"@ionic-native/push\";\r\nimport { FCM } from '@ionic-native/fcm';\r\n\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n})\r\nexport class Login {\r\n  deviceData: any;  \r\n  LoginForm: FormGroup;\r\n  showLoader: boolean = false;\r\n  constructor(public navCtrl: NavController,\r\n    public navParams: NavParams,\r\n    public userLogin: UserProvider,\r\n    public toastCtrl: ToastController,\r\n    public network: Network,\r\n    //public push: Push,\r\n    public fcm: FCM,\r\n    public platform: Platform,\r\n    public events: Events,\r\n    public pushProvider: PushProvider\r\n  ) {\r\n    this.LoginForm = new FormGroup({\r\n      username: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    // check network connection on devices this.showToast('Connection Type ['+ this.network.type+ ']');\r\n\r\n    /* this.LoginForm.valueChanges.subscribe((data)=>{\r\n       console.log(data);\r\n     })\r\n   \r\n    let type = this.platform.is('ios') ? 'ios' : (this.platform.is('windows')?'windows':'android');\r\n\r\n    this.showToast(type);\r\n   */\r\n    this.findDeviceToken();\r\n  }\r\n\r\n  findDeviceToken(){\r\n    this.fcm.getToken().then(token=>{\r\n      let type = this.platform.is('ios') ? 'ios' : (this.platform.is('windows')?'windows':'android');\r\n      this.deviceData = {\r\n          device_token_id : token,\r\n          type : type\r\n      }\r\n    })\r\n    \r\n    this.fcm.onTokenRefresh().subscribe(token=>{\r\n      let type = this.platform.is('ios') ? 'ios' : (this.platform.is('windows')?'windows':'android');\r\n      this.deviceData = {\r\n          device_token_id : token,\r\n          type : type\r\n      }\r\n    })\r\n  //***********************************//\r\n  }\r\n\r\n  submitLogin() {\r\n    if (this.LoginForm.valid) {\r\n\r\n      this.showLoader = true;\r\n      this.userLogin.LoginUser({...this.deviceData,...this.LoginForm.value})\r\n      .subscribe(({status, message, data}) => {\r\n          console.log(status, message);\r\n          //TODO: if data is correct navigate to the home page\r\n          if (status == 'success') {\r\n\r\n            let userLocalData = data;\r\n\r\n            this.showLoader = false;\r\n\r\n            localStorage.setItem('userLocalData', JSON.stringify(userLocalData));\r\n            //console.log(`this.userLocalData if login success ${JSON.stringify(userLocalData)}`)\r\n            \r\n            \r\n            //this.events.publish('updateLocalUser', JSON.parse(localStorage.getItem('userLocalData')));\r\n            this.events.publish('callCountNotify','yes');\r\n\r\n            this.navCtrl.pop();\r\n\r\n\r\n          } else {\r\n            this.showLoader = false;\r\n            this.showToast(`${message}`)\r\n          }\r\n\r\n        },err => {\r\n          this.showToast('التطبيق يتطلب اتصال بالانترنت');\r\n          console.warn(err);\r\n          this.showLoader = false;\r\n        }\r\n      );\r\n    }else {\r\n      this.showLoader = false;\r\n      let formKeys = Object.keys(this.LoginForm.value);\r\n      this.showLoader = false;\r\n      for (let value of formKeys) {\r\n        if (this.LoginForm.get(value).getError('required')) {\r\n          value = (value == 'username') ? 'اسم المستخدم' : 'كلمة المرور';\r\n          this.showToast(`يرجى ادخال ${value}`);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toRegisterPage() {\r\n    this.navCtrl.push('Signup')\r\n  }\r\n\r\n  checkConnection() {\r\n    if (this.network.type == 'none') {\r\n      this.showToast('You are not connected to the internet ');\r\n      setTimeout(() => {\r\n        this.showLoader = false;\r\n      }, 50);\r\n    } else {\r\n      console.log('you are connected to ' + this.network.type);\r\n    }\r\n  }\r\n\r\n  showToast(msg) {\r\n    let toast = this.toastCtrl.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      //cssClass: 'danger-toast'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  toForgetPass():void {\r\n    this.navCtrl.push('ForgetPage')\r\n  }\r\n\r\n  backStep():void {\r\n    this.navCtrl.popToRoot();\r\n    console.log('pop this page.. please!');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}