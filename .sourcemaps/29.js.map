{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"29.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { Login } from './login';\nimport { HsaloaderComponentModule } from '../../components/hsa-loader/hsa-loader.module';\n\n\n@NgModule({\n  declarations: [\n    Login,\n  ],\n  imports: [\n    IonicPageModule.forChild(Login),\n    HsaloaderComponentModule\n  ],\n  exports: [\n    Login\n  ]\n})\nexport class LoginModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { PushProvider } from './../../providers/push';\r\nimport { Component } from '@angular/core';\r\nimport {Events, IonicPage, NavController, NavParams, Platform, ToastController} from 'ionic-angular';\r\n\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Network } from '@ionic-native/network';\r\n\r\nimport { UserProvider } from \"../../providers/user\";\r\nimport {Push, PushOptions,PushObject} from \"@ionic-native/push\";\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n})\r\nexport class Login {\r\n  LoginForm: FormGroup;\r\n  showLoader: boolean = false;\r\n  constructor(public navCtrl: NavController,\r\n    public navParams: NavParams,\r\n    public userLogin: UserProvider,\r\n    public toastCtrl: ToastController,\r\n    public network: Network,\r\n    public push: Push,\r\n    public platform: Platform,\r\n              public events: Events,\r\n              public pushProvider: PushProvider\r\n  ) {\r\n    this.LoginForm = new FormGroup({\r\n      username: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    // check network connection on devices this.showToast('Connection Type ['+ this.network.type+ ']');\r\n\r\n    /* this.LoginForm.valueChanges.subscribe((data)=>{\r\n       console.log(data);\r\n     })\r\n   \r\n    let type = this.platform.is('ios') ? 'ios' : (this.platform.is('windows')?'windows':'android');\r\n\r\n    this.showToast(type);\r\n */\r\n  }\r\n\r\n\r\n  submitLogin() {\r\n\r\n    //TODO: chech the internet connection || works  on device only\r\n    console.log(this.network.type);\r\n    /*if ( this.network.type == 'none') {\r\n      //if ('1' == '2') {\r\n      this.showToast('التطبيق يتطلب اتصال بالانترنت');\r\n      this.showLoader = false;\r\n    } else {\r\n      */\r\n        if (this.LoginForm.valid) {\r\n          this.showLoader = true;\r\n          let deviceData ={};\r\n          let pushOptios: PushOptions = {\r\n            android: {\r\n              senderID: '146464528118'\r\n            },\r\n            ios: {\r\n              alert: 'true',\r\n              badge: true,\r\n              sound: 'false'\r\n            },\r\n            windows: {}\r\n          };\r\n          this.userLogin.LoginUser({...deviceData,...this.LoginForm.value})\r\n          .subscribe(({status, message, data}) => {\r\n            console.log(status, message);\r\n            //TODO: if data is correct navigate to the home page\r\n            if (status == 'success') {\r\n\r\n              let userLocalData = data;\r\n\r\n              this.showLoader = false;\r\n\r\n              localStorage.setItem('userLocalData', JSON.stringify(userLocalData));\r\n\r\n              this.events.publish('updateLocalUser', JSON.parse(localStorage.getItem('userLocalData')));\r\n\r\n              this.navCtrl.pop();\r\n\r\n              this.events.publish('loginUser','userLog')\r\n\r\n              // TODO: navigate to the home page\r\n              /*\r\n              this.navCtrl.setRoot('HomePage');\r\n\r\n              this.navCtrl.popToRoot();\r\n              */\r\n\r\n              console.table(localStorage.getItem('userLocalData'));\r\n\r\n            } else {\r\n              this.showLoader = false;\r\n              this.showToast(`${message}`)\r\n            }this.showLoader = true;\r\n          /*let push: PushObject = this.push.init(pushOptios);\r\n\r\n          \r\n            \r\n          \r\n          push.on('registration').subscribe((registration: any) => {\r\n            let type = this.platform.is('ios') ? 'ios' : (this.platform.is('windows')?'windows':'android');\r\n            \r\n            deviceData = {\r\n                device_token_id : registration.registrationId,\r\n                type\r\n            }\r\n      \r\n            this.userLogin.LoginUser({...deviceData,...this.LoginForm.value})\r\n            .subscribe(({status, message, data}) => {\r\n              console.log(status, message);\r\n              //TODO: if data is correct navigate to the home page\r\n              if (status == 'success') {\r\n  \r\n                let userLocalData = data;\r\n  \r\n                this.showLoader = false;\r\n  \r\n                localStorage.setItem('userLocalData', JSON.stringify(userLocalData));\r\n  \r\n                this.events.publish('updateLocalUser', JSON.parse(localStorage.getItem('userLocalData')));\r\n  \r\n                // TODO: navigate to the home page\r\n                this.navCtrl.setRoot('HomePage');\r\n  \r\n                this.navCtrl.popToRoot();\r\n  \r\n                console.table(localStorage.getItem('userLocalData'));\r\n  \r\n              } else {\r\n                this.showLoader = false;\r\n                this.showToast(`${message}`)\r\n              }\r\n            },\r\n            err => {\r\n              this.showToast('التطبيق يتطلب اتصال بالانترنت');\r\n              console.warn(err);\r\n              this.showLoader = false;\r\n            }\r\n          );\r\n            console.log('Device registered', registration, registration.registrationId, this.platform.is('android') ? 'android' : 'ios');\r\n      \r\n            /*\r\n            this.pushProvider.sendDeviceToken(deviceData)\r\n              .subscribe(res=> {\r\n                console.log(res);\r\n              })\r\n            */\r\n          });\r\n          \r\n             // push.on('error').subscribe(error => console.error('Error with Push plugin', error));\r\n          \r\n        \r\n        \r\n        } else {\r\n          this.showLoader = false;\r\n          let formKeys = Object.keys(this.LoginForm.value);\r\n          this.showLoader = false;\r\n          for (let value of formKeys) {\r\n            if (this.LoginForm.get(value).getError('required')) {\r\n              value = (value == 'username') ? 'اسم المستخدم' : 'كلمة المرور';\r\n              this.showToast(`يرجى ادخال ${value}`);\r\n              break;\r\n            }\r\n          }\r\n\r\n          /*\r\n\r\n          if (this.LoginForm.value.Username == \"\")\r\n            this.showToast(' يرجى ادخال اسم  المستخدم');\r\n          else {\r\n            this.showToast('يرجى ادخال كلمة المرور')\r\n          }\r\n          */\r\n      }\r\n   // }\r\n\r\n  }\r\n\r\n  toRegisterPage() {\r\n    this.navCtrl.push('Signup')\r\n  }\r\n\r\n  checkConnection() {\r\n    if (this.network.type == 'none') {\r\n      this.showToast('You are not connected to the internet ');\r\n      setTimeout(() => {\r\n        this.showLoader = false;\r\n      }, 50);\r\n    } else {\r\n      console.log('you are connected to ' + this.network.type);\r\n    }\r\n  }\r\n\r\n  showToast(msg) {\r\n    let toast = this.toastCtrl.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      //cssClass: 'danger-toast'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  toForgetPass():void {\r\n    this.navCtrl.push('ForgetPage')\r\n  }\r\n\r\n  backStep():void {\r\n    this.navCtrl.popToRoot();\r\n    console.log('pop this page.. please!');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}