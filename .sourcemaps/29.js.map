{"version":3,"sources":["../../src/pages/messages/messages.module.ts","../../src/pages/messages/messages.ts"],"names":[],"mappings":"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","file":"29.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { Messages } from './messages';\r\nimport {HsaloaderComponentModule} from \"../../components/hsa-loader/hsa-loader.module\";\r\nimport { MomentModule } from 'angular2-moment';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Messages,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(Messages),\r\n    HsaloaderComponentModule,\r\n    MomentModule,\r\n  ],\r\n  exports: [\r\n    Messages\r\n  ]\r\n})\r\nexport class MessagesModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/messages/messages.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Network } from '@ionic-native/network';\r\nimport {MessagesProvider} from \"../../providers/messagesprovider\";\r\nimport {IlocalUser, INotificationMessage} from \"../../app/service/interfaces\";\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-messages',\r\n  templateUrl: 'messages.html',\r\n})\r\nexport class Messages {\r\n  localUser: IlocalUser = JSON.parse(localStorage.getItem('userLocalData'));\r\n  isOnline:boolean = true;\r\n  initLimit: number = 10;\r\n  initStart: number = 0;\r\n  AllMessages:INotificationMessage[];\r\n  netError: boolean = false;\r\n  showLoader: boolean = true;\r\n  moreData: boolean = true;\r\n  noData: boolean = false;\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public navParams: NavParams,\r\n    public network: Network,\r\n    public toastCtrl: ToastController,\r\n    public messagesProvider: MessagesProvider\r\n  ) {\r\n\r\n\r\n\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n\r\n\r\n    if (!this.localUser)\r\n      this.localUser= JSON.parse(localStorage.getItem('userLocalData'));\r\n\r\n    //console.log('ionViewDidLoad Messages');\r\n    /*\r\n    this.network.onConnect().subscribe(data=>{\r\n      this.isOnline = true;\r\n    });\r\n\r\n    this.network.onDisconnect().subscribe(data=> {\r\n      this.isOnline = false;\r\n    });\r\n\r\n    */\r\n\r\n    this.getMessages();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    //this.scanBarcode();\r\n    /*\r\n    if ( this.network.type == 'none' || this.network.type == null) {\r\n      this.isOnline = false;\r\n    } else {\r\n      this.isOnline = true\r\n    }*/\r\n  }\r\n  refreshData(event):void {\r\n    this.getMessages(event);\r\n  }\r\n  getMessages(event?:any):void {\r\n\r\n    this.messagesProvider.getAllMessage(this.localUser.id, this.initLimit, 0)\r\n      .subscribe(\r\n        ({status, data}) => {\r\n          if (status === 'success') {\r\n            if (data.length == 0) {\r\n              //this.showToast('لا يوجد رسائل');\r\n              this.noData = true;\r\n            }\r\n            this.AllMessages = data;\r\n          } else {\r\n            this.noData = true;\r\n          }\r\n          //console.log('response all messages', res);\r\n        },\r\n        err => {\r\n          event&&event.complete();\r\n          this.netError = true;\r\n          this.showLoader = false;\r\n          console.warn(err)\r\n        },\r\n        () =>{\r\n          this.showLoader = false;\r\n          event&&event.complete();\r\n        }\r\n      )\r\n\r\n  }\r\n  getMoreData(event) {\r\n    if (this.moreData) {\r\n      this.initStart += this.initLimit;\r\n      this.messagesProvider.getAllMessage(this.localUser.id, this.initLimit, this.initStart)\r\n        .subscribe(\r\n          ({status, data}) => {\r\n            if  (status == 'success') {\r\n\r\n\r\n              this.AllMessages = [...this.AllMessages, ...data];\r\n              if (data.length < this.initLimit)\r\n                this.moreData = false;\r\n\r\n            } else {\r\n\r\n              event.complete();\r\n              this.moreData = false;\r\n\r\n            }\r\n          },\r\n          (err) => {\r\n            console.warn(err);\r\n            this.netError = true;\r\n            this.showLoader = false;\r\n          },\r\n          () => {\r\n            this.showLoader = false;\r\n          }\r\n        )\r\n    } else {\r\n      event.complete();\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  openMessage( messageData= \"supposed to be message info\") {\r\n    this.navCtrl.push('ShowmessagePage', {messageData});\r\n  }\r\n  showToast(msg) {\r\n    let toast = this.toastCtrl.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      cssClass: 'danger-toast'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  isRead(status) {\r\n    return (status == 0) ? 'highlight' : '';\r\n  }\r\n\r\n  imagePath(img) {\r\n    return 'http://rfapp.net/templates/default/uploads/avatars/'+img\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/messages/messages.ts"],"sourceRoot":""}